import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

def prepare_data(sequence):
    X = np.arange(len(sequence)).reshape(-1, 1)
    y = np.array(sequence).reshape(-1, 1)
    return X, y

def train_and_predict_next_number(X, y, degree):
    poly = PolynomialFeatures(degree=degree)
    X_poly = poly.fit_transform(X)
    model = LinearRegression()
    model.fit(X_poly, y)
    next_index = len(y)
    next_index_poly = poly.fit_transform([[next_index]])
    next_number_prediction = model.predict(next_index_poly)
    return next_number_prediction[0][0]

# Input sequences
sequences = [
    {'data': [23, 25, 28, 35, 36, 42, 14, 17, 34, 22, 26, 27, 21, 27, 33, 25, 35, 44, 22, 18, 30, 23, 19, 33, 19, 19, 31, 37, 34, 26, 22, 29, 30, 21, 32, 30, 26, 29, 24, 18, 27, 25, 21, 33, 31, 20, 27, 16, 36, 24, 25, 19, 34, 34, 31, 23, 8, 25, 28, 28, 35, 41, 25, 9, 30, 29, 14, 28, 16, 10], 'label': 'points'},
    {'data': [13, 13, 9, 6, 12, 5, 10, 7, 10, 9, 7, 11, 9, 9, 12, 10, 7, 5, 14, 10, 14, 10, 6, 9, 14, 16, 9, 13, 6, 13, 10, 8, 14, 6, 9, 8, 11, 9, 8, 12, 6, 12, 13, 11, 10, 12, 6, 16, 12, 17, 14, 11, 9, 8, 7, 11, 10, 7, 10, 9, 13, 7, 12, 6, 12, 8, 5, 10, 10, 6], 'label': 'assists'},
    {'data': [3, 4, 5, 3, 2, 6, 0, 6, 1, 4, 3, 1, 3, 5, 3, 2, 1, 0, 5, 2, 2, 3, 4, 0, 2, 3, 1, 3, 6, 2, 3, 3, 7, 0, 5, 2, 2, 0, 3, 4, 1, 5, 3, 3, 5, 1, 4, 3, 7, 4, 2, 1, 3, 3, 2, 7, 4, 1, 4, 2, 3, 6, 6, 4, 3, 2, 3, 2, 1, 0], 'label': 'rebounds'}
]

# Polynomial degree
degree = 2

print("The predicted next numbers in the sequences are:")
for seq in sequences:
    X, y = prepare_data(seq['data'])
    next_number_prediction = train_and_predict_next_number(X, y, degree)
    print(f"{seq['label'].capitalize()}: {next_number_prediction:.2f}")
