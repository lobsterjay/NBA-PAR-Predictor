import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

def prepare_data(sequence):
    X = np.arange(len(sequence)).reshape(-1, 1)
    y = np.array(sequence).reshape(-1, 1)
    return X, y

def train_and_predict_next_number(X, y, degree):
    poly = PolynomialFeatures(degree=degree)
    X_poly = poly.fit_transform(X)
    model = LinearRegression()
    model.fit(X_poly, y)
    next_index = len(y)
    next_index_poly = poly.fit_transform([[next_index]])
    next_number_prediction = model.predict(next_index_poly)
    return max(0, next_number_prediction[0][0])  # Set a lower limit of 0

# Input sequences
sequences = [
    {'data': [27, 20, 23, 21, 29, 21, 18, 15, 22, 33, 30, 19, 18, 24, 20, 22, 9, 20, 23, 23, 20, 20, 20, 31, 18, 23, 18, 4, 15, 21, 25, 30, 25, 17, 19, 19, 18, 11, 15, 23, 23, 19, 9, 29, 13, 11, 22, 16, 11, 16, 22, 13, 11, 19, 29, 9, 31, 26, 20, 26, 17, 27, 18, 12, 21, 18, 21, 11, 24, 30, 14], 'label': 'points'},
    {'data': [5, 2, 3, 2, 4, 7, 4, 2, 3, 4, 4, 3, 1, 5, 5, 4, 3, 7, 2, 4, 5, 6, 5, 3, 7, 3, 4, 3, 2, 4, 7, 3, 3, 4, 2, 3, 4, 2, 4, 2, 4, 1, 3, 3, 3, 4, 5, 5, 2, 1, 3, 3, 6, 0, 4, 5, 5, 2, 3, 2, 9, 0, 3, 6, 3, 8, 4, 4, 5, 6, 3], 'label': 'assists'},
    {'data': [9, 12, 5, 4, 8, 12, 3, 8, 8, 16, 6, 4, 1, 4, 2, 5, 3, 12, 5, 6, 12, 6, 5, 6, 4, 13, 6, 5, 5, 5, 8, 9, 5, 8, 10, 4, 2, 6, 1, 5, 3, 5, 7, 9, 9, 8, 10, 8, 10, 13, 4, 1, 6, 6, 8, 7, 6, 5, 4, 8, 10, 6, 8, 6, 6, 9, 6, 9, 11, 12, 9], 'label': 'rebounds'}
]

# Polynomial degree
degree = 2

print("The predicted next numbers in the sequences are:")
for seq in sequences:
    X, y = prepare_data(seq['data'])
    next_number_prediction = train_and_predict_next_number(X, y, degree)
    print(f"{seq['label'].capitalize()}: {next_number_prediction:.2f}")
