import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline
from sklearn.model_selection import GridSearchCV

def prepare_data(sequence):
    return np.arange(len(sequence)).reshape(-1, 1), np.array(sequence).reshape(-1, 1)

def train_and_predict_next_number(X, y):
    model = make_pipeline(PolynomialFeatures(), LinearRegression())
    
    param_grid = {'polynomialfeatures__degree': np.arange(1, 6)}
    grid_search = GridSearchCV(model, param_grid, cv=len(y))
    grid_search.fit(X, y)
    
    next_index = len(y)
    next_number_prediction = grid_search.best_estimator_.predict([[next_index]])
    return max(0, next_number_prediction[0][0])
    
# Multiple sets of input sequences
sequence_sets = {
    'CustomName1': [
        {'data': [16, 33, 22], 'label': 'points'},
        {'data': [3, 2, 2], 'label': 'assists'},
        {'data': [5, 5, 4], 'label': 'rebounds'},
        {'data': [1, 4, 4], 'label': '3P Made'}
    ],
    'CustomName2': [
        {'data': [10, 15, 20], 'label': 'points'},
        {'data': [2, 3, 1], 'label': 'assists'},
        {'data': [6, 5, 8], 'label': 'rebounds'},
        {'data': [3, 1, 2], 'label': '3P Made'}
    ],
    'CustomName3': [
        {'data': [11, 15, 20], 'label': 'points'},
        {'data': [1, 3, 1], 'label': 'assists'},
        {'data': [3, 5, 8], 'label': 'rebounds'},
        {'data': [1, 1, 2], 'label': '3P Made'}
    ],
    'CustomName4': [
        {'data': [41, 15, 20], 'label': 'points'},
        {'data': [10, 3, 1], 'label': 'assists'},
        {'data': [6, 5, 8], 'label': 'rebounds'},
        {'data': [7, 1, 2], 'label': '3P Made'}
    ],
    'CustomName5': [
        {'data': [16, 33, 22], 'label': 'points'},
        {'data': [3, 2, 2], 'label': 'assists'},
        {'data': [5, 5, 4], 'label': 'rebounds'},
        {'data': [1, 4, 4], 'label': '3P Made'}
    ],
    'CustomName6': [
        {'data': [10, 15, 20], 'label': 'points'},
        {'data': [2, 3, 1], 'label': 'assists'},
        {'data': [6, 5, 8], 'label': 'rebounds'},
        {'data': [3, 1, 2], 'label': '3P Made'}
    ],
    'CustomName7': [
        {'data': [11, 15, 20], 'label': 'points'},
        {'data': [1, 3, 1], 'label': 'assists'},
        {'data': [3, 5, 8], 'label': 'rebounds'},
        {'data': [1, 1, 2], 'label': '3P Made'}
    ],
    'CustomName8': [
        {'data': [41, 15, 20], 'label': 'points'},
        {'data': [10, 3, 1], 'label': 'assists'},
        {'data': [6, 5, 8], 'label': 'rebounds'},
        {'data': [7, 1, 2], 'label': '3P Made'}
    ],
    'CustomName9': [
        {'data': [11, 15, 20], 'label': 'points'},
        {'data': [1, 3, 1], 'label': 'assists'},
        {'data': [3, 5, 8], 'label': 'rebounds'},
        {'data': [1, 1, 2], 'label': '3P Made'}
    ],
    'CustomName10': [
        {'data': [41, 15, 20], 'label': 'points'},
        {'data': [10, 3, 1], 'label': 'assists'},
        {'data': [6, 5, 8], 'label': 'rebounds'},
        {'data': [7, 1, 2], 'label': '3P Made'}
    ],
    # Add more sets of input sequences with custom unique names as needed
}

print("The predicted next numbers in the sequence sets are:")
for set_key, sequences in sequence_sets.items():
    print(f"\n{set_key}:")
    for seq in sequences:
        X, y = prepare_data(seq['data'])
        next_number_prediction = train_and_predict_next_number(X, y)
        print(f"  {seq['label'].capitalize()}: {next_number_prediction:.2f}")
